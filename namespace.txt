Schema dello spazio dei nomi della libreria rivisitato e non ancora completo.
Probabilmente si aggiungeranno altre voci, per esempio tutte quelle relative
alle query.


 georep (radice)
 │
 ├─ constants (sezione relativa a costanti utilizzate nel resto del codice)
 │  │
 │  └─ designDocs (vettore* contenente l'elenco dei designDoc usati)
 │
 ├─ db (sezione relativa al database remoto)
 │  │
 │  ├─ admin  (sezione relativa all'amministratore del DB remoto)
 │  │  │
 │  │  ├─ base64      credenziali dell'amministratore utilizzate per il login
 │  │  │              sul DB codificate in 'base64'
 │  │  └─ configured  indica se l'amministratore e' stato configurato
 │  │
 │  ├─ configured  indica se DB e' stato configurato
 │  ├─ name        nome del db
 │  ├─ host        IP o Hostname della macchina
 │  ├─ port        porta sulla quale il server e' in ascolto
 │  ├─ proto       protocollo di comunicazione (http://, https://, ecc...)
 │  │
 │  ├─ isConfigured()
 │  ├─ setAdmin()
 │  ├─ setDBName()
 │  ├─ setURLServer()
 │  │
 │  ├─ getDoc()
 │  ├─ getDocsInBox()
 │  ├─ getUserDocs() 
 │  └─ postDoc()
 │
 └─ user (sezione relativa all'utente che utilizza il DB)
    │
    ├─ _id         identificatore unico associato all'utente
    ├─ base64      credenziali dell'utente utilizzate per il login sul DB
    │              codificate in 'base64'
    ├─ configured  indica se l'utente e' stato configurato
    ├─ mail        indirizzo email dell'utente
    ├─ name        username utilizzato dall'utente per l'autenticazione sul DB
    ├─ nick        nickname arbitrariamente scelto dall'utente
    ├─ password    password usata dall'utente per l'autenticazione sul DB
    ├─ roles       ruoli dell'utente sul DB; deve essere []
    ├─ type        tipo dell'utente; deve essere 'user'
    │
    ├─ check()
    ├─ isConfigured()
    ├─ set()
    ├─ signup()
    └─ update()


*) designDocs è un vettore di oggetti strutturati in questo modo
    {
    	name: "nome del documento"     /* nome di questo design document  */
    	handlers: ["h1", "h2", ... ]   /* vettore dei gestori delle views */
    }
    
    un gestore e' un oggetto di questo tipo:
    {
    	name: "nome del gestore",      /* nome di questo handler */
    	views: ["view1", "view2", ...] /* nomi delle views gestite da questo handler */
    }


